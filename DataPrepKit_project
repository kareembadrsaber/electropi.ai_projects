#!/usr/bin/python3
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Data Reading Functions
def read_data(file_path):
    if file_path.endswith('.csv'):
        return pd.read_csv(file_path)
    elif file_path.endswith('.xlsx') or file_path.endswith('.xls'):
        return pd.read_excel(file_path)
    elif file_path.endswith('.json'):
        return pd.read_json(file_path)
    else:
        raise ValueError("Unsupported file format. Supported formats are: CSV, Excel, JSON")

# Data Exploration and Analysis (EDA)
def explore_data(data):
    print("Data Info:")
    print(data.info())
    print("\nData Description:")
    print(data.describe())
    print("\nData Head:")
    print(data.head())

# Handling Missing Values Functions
def handle_missing_values(data):
    # Identify numeric and categorical columns
    numeric_cols = data.select_dtypes(include=np.number).columns.tolist()
    categorical_cols = data.select_dtypes(exclude=np.number).columns.tolist()

    # Handling missing values in numeric columns
    for col in numeric_cols:
        if data[col].isnull().sum() > 0:
            data[col].fillna(data[col].mean(), inplace=True)

    # Handling missing values in categorical columns
    for col in categorical_cols:
        if data[col].isnull().sum() > 0:
            data[col].fillna(data[col].mode()[0], inplace=True)

# Categorical Data Encoding Functions
def encode_categorical_data(data):
    encoded_data = pd.get_dummies(data)
    return encoded_data

# Visualization Function
def plot_data(data, x_column, y_column):
    plt.figure(figsize=(10,  6))
    plt.plot(data[x_column], data[y_column])
    plt.xlabel(x_column)
    plt.ylabel(y_column)
    plt.title('Data Visualization')
    plt.show()

# Example usage
if __name__ == "__main__":
    # Ask user to input data path
    file_path = input("Enter the path to the data file: ")

    # Read data
    df = read_data(file_path)

    # Explore data
    explore_data(df)

    # Handle missing values
    handle_missing_values(df)

    # Encode categorical data
    df_encoded = encode_categorical_data(df)

    # Print column names in df_encoded
    print("Column names in df_encoded:", df_encoded.columns)

    # Plot the data
    plot_data(df_encoded, 'actual_x_column_name', 'actual_y_column_name')
